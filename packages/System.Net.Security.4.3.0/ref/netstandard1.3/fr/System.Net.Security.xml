<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Net.Security</name>
  </assembly>
  <members>
    <member name="T:System.Net.Security.EncryptionPolicy">
      <summary>EncryptionPolicy à utiliser. </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.AllowNoEncryption">
      <summary>Utilisez de préférence un chiffrement complet, mais autorisez un chiffrement NULL (aucun chiffrement) si le serveur accepte. </summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.NoEncryption">
      <summary>N'autorisez aucun chiffrement et demandez qu'un chiffrement NULL soit utilisé si l'autre point de terminaison peut gérer un chiffrement NULL.</summary>
    </member>
    <member name="F:System.Net.Security.EncryptionPolicy.RequireEncryption">
      <summary>Exigez un chiffrement et n'autorisez jamais de chiffrement NULL.</summary>
    </member>
    <member name="T:System.Net.Security.LocalCertificateSelectionCallback">
      <summary>Sélectionne le certificat SSL (Secure Sockets Layer) local utilisé pour l'authentification.</summary>
      <returns>
        <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> utilisé pour établir une connexion SSL.</returns>
      <param name="sender">Objet contenant les informations d'état de cette validation.</param>
      <param name="targetHost">Serveur hôte spécifié par le client.</param>
      <param name="localCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> qui contient des certificats locaux.</param>
      <param name="remoteCertificate">Certificat utilisé pour authentifier le tiers distant.</param>
      <param name="acceptableIssuers">Tableau <see cref="T:System.String" /> des émetteurs des certificats admis par le tiers distant.</param>
    </member>
    <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
      <summary>Vérifie le certificat SSL (Secure Sockets Layer) distant utilisé pour l'authentification.</summary>
      <returns>Valeur <see cref="T:System.Boolean" /> déterminant si le certificat spécifié est accepté pour l'authentification.</returns>
      <param name="sender">Objet contenant les informations d'état de cette validation.</param>
      <param name="certificate">Certificat utilisé pour authentifier le tiers distant.</param>
      <param name="chain">Chaîne des autorités de certification associées au certificat distant.</param>
      <param name="sslPolicyErrors">Une ou plusieurs erreurs associées au certificat distant.</param>
    </member>
    <member name="T:System.Net.Security.SslStream">
      <summary>Fournit un flux utilisé pour la communication client-serveur qui utilise le protocole de sécurité SSL (Secure Socket Layer) pour authentifier le serveur et éventuellement le client.</summary>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.SslStream" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="innerStream">Objet <see cref="T:System.IO.Stream" /> utilisé par le <see cref="T:System.Net.Security.SslStream" /> pour envoyer et recevoir des données.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> n'est pas accessible en lecture.ou<paramref name="innerStream" /> n'est pas accessible en écriture.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> a la valeur null.ou<paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.SslStream" /> à l'aide du <see cref="T:System.IO.Stream" /> et du comportement de clôture de flux spécifiés.</summary>
      <param name="innerStream">Objet <see cref="T:System.IO.Stream" /> utilisé par le <see cref="T:System.Net.Security.SslStream" /> pour envoyer et recevoir des données.</param>
      <param name="leaveInnerStreamOpen">Valeur booléenne qui indique le comportement de fermeture de l'objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.SslStream" /> pour l'envoi et la réception de données.Ce paramètre indique si le flux interne est resté ouvert.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> n'est pas accessible en lecture.ou<paramref name="innerStream" /> n'est pas accessible en écriture.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> a la valeur null.ou<paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.SslStream" /> en utilisant <see cref="T:System.IO.Stream" />, le comportement de clôture de flux et le délégué de validation de certificat spécifiés.</summary>
      <param name="innerStream">Objet <see cref="T:System.IO.Stream" /> utilisé par le <see cref="T:System.Net.Security.SslStream" /> pour envoyer et recevoir des données.</param>
      <param name="leaveInnerStreamOpen">Valeur booléenne qui indique le comportement de fermeture de l'objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.SslStream" /> pour l'envoi et la réception de données.Ce paramètre indique si le flux interne est resté ouvert.</param>
      <param name="userCertificateValidationCallback">Délégué <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> responsable de la validation du certificat fourni par le tiers distant.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> n'est pas accessible en lecture.ou<paramref name="innerStream" /> n'est pas accessible en écriture.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> a la valeur null.ou<paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.SslStream" /> en utilisant <see cref="T:System.IO.Stream" />, le comportement de clôture de flux, le délégué de validation de certificat et le délégué de sélection de certificat spécifiés.</summary>
      <param name="innerStream">Objet <see cref="T:System.IO.Stream" /> utilisé par le <see cref="T:System.Net.Security.SslStream" /> pour envoyer et recevoir des données.</param>
      <param name="leaveInnerStreamOpen">Valeur booléenne qui indique le comportement de fermeture de l'objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.SslStream" /> pour l'envoi et la réception de données.Ce paramètre indique si le flux interne est resté ouvert.</param>
      <param name="userCertificateValidationCallback">Délégué <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> responsable de la validation du certificat fourni par le tiers distant.</param>
      <param name="userCertificateSelectionCallback">Délégué <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> responsable de la sélection du certificat utilisé pour l'authentification.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> n'est pas accessible en lecture.ou<paramref name="innerStream" /> n'est pas accessible en écriture.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> a la valeur null.ou<paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Net.Security.SslStream" /> à l'aide du <see cref="T:System.IO.Stream" /> spécifié.</summary>
      <param name="innerStream">Objet <see cref="T:System.IO.Stream" /> utilisé par le <see cref="T:System.Net.Security.SslStream" /> pour envoyer et recevoir des données.</param>
      <param name="leaveInnerStreamOpen">Valeur booléenne qui indique le comportement de fermeture de l'objet <see cref="T:System.IO.Stream" /> utilisé par <see cref="T:System.Net.Security.SslStream" /> pour l'envoi et la réception de données.Ce paramètre indique si le flux interne est resté ouvert.</param>
      <param name="userCertificateValidationCallback">Délégué <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> responsable de la validation du certificat fourni par le tiers distant.</param>
      <param name="userCertificateSelectionCallback">Délégué <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> responsable de la sélection du certificat utilisé pour l'authentification.</param>
      <param name="encryptionPolicy">
        <see cref="T:System.Net.Security.EncryptionPolicy" /> à utiliser.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="innerStream" /> n'est pas accessible en lecture.ou<paramref name="innerStream" /> n'est pas accessible en écriture.ou<paramref name="encryptionPolicy" /> n'est pas valide.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream" /> a la valeur null.ou<paramref name="innerStream" /> est égal à <see cref="F:System.IO.Stream.Null" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
      <summary>Appelé par les clients pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur.</summary>
      <param name="targetHost">Nom du serveur qui partage ce <see cref="T:System.Net.Security.SslStream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> a la valeur null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">L'authentification a échoué et a rendu cet objet inutilisable.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification a déjà été effectuée.ouL'authentification du serveur à l'aide de ce <see cref="T:System.Net.Security.SslStream" /> a déjà été tentée.ou L'authentification est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Appelé par les clients pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur.Le processus d'authentification utilise la collection de certificats spécifiée et le protocole SSL.</summary>
      <param name="targetHost">Nom du serveur qui partagera ce <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> qui contient les certificats clients.</param>
      <param name="enabledSslProtocols">Valeur <see cref="T:System.Security.Authentication.SslProtocols" /> qui représente le protocole utilisé pour l'authentification.</param>
      <param name="checkCertificateRevocation">Valeur <see cref="T:System.Boolean" /> qui spécifie si la liste de révocation de certificats est vérifiée pendant l'authentification.</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
      <summary>Appelé par les clients pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur sous forme d'opération asynchrone.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />Objet de tâche représentant l'opération asynchrone.</returns>
      <param name="targetHost">Nom du serveur qui partage ce <see cref="T:System.Net.Security.SslStream" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost" /> a la valeur null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">L'authentification a échoué et a rendu cet objet inutilisable.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification a déjà été effectuée.ouL'authentification du serveur à l'aide de ce <see cref="T:System.Net.Security.SslStream" /> a déjà été tentée.ou L'authentification est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Appelé par les clients pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur sous forme d'opération asynchrone.Le processus d'authentification utilise la collection de certificats spécifiée et le protocole SSL.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />Objet de tâche représentant l'opération asynchrone.</returns>
      <param name="targetHost">Nom du serveur qui partagera ce <see cref="T:System.Net.Security.SslStream" />.</param>
      <param name="clientCertificates">
        <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> qui contient les certificats clients.</param>
      <param name="enabledSslProtocols">Valeur <see cref="T:System.Security.Authentication.SslProtocols" /> qui représente le protocole utilisé pour l'authentification.</param>
      <param name="checkCertificateRevocation">Valeur <see cref="T:System.Boolean" /> qui spécifie si la liste de révocation de certificats est vérifiée pendant l'authentification.</param>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur à l'aide du certificat spécifié.</summary>
      <param name="serverCertificate">Certificat utilisé pour authentifier le serveur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> a la valeur null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">L'authentification a échoué et a rendu cet objet inutilisable.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification a déjà été effectuée.ouL'authentification du client à l'aide de ce <see cref="T:System.Net.Security.SslStream" /> a déjà été tentée.ou L'authentification est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La méthode <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> n'est pas prise en charge dans Windows 95, Windows 98 ou Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Appelé par les serveurs pour commencer authentifier le serveur, et éventuellement le client, dans une connexion client-serveur, à l'aide des certificats, de la configuration requise et du protocole de sécurité spécifiés.</summary>
      <param name="serverCertificate">Objet X509Certificate utilisé pour authentifier le serveur.</param>
      <param name="clientCertificateRequired">Valeur <see cref="T:System.Boolean" /> qui spécifie si le client doit fournir un certificat pour l'authentification.</param>
      <param name="enabledSslProtocols">Valeur <see cref="T:System.Security.Authentication.SslProtocols" /> qui représente le protocole utilisé pour l'authentification.</param>
      <param name="checkCertificateRevocation">Valeur <see cref="T:System.Boolean" /> qui spécifie si la liste de révocation de certificats est vérifiée pendant l'authentification.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols" /> n'est pas une valeur <see cref="T:System.Security.Authentication.SslProtocols" /> valide.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">L'authentification a échoué et a rendu cet objet inutilisable.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification a déjà été effectuée.ouL'authentification du client à l'aide de ce <see cref="T:System.Net.Security.SslStream" /> a déjà été tentée.ou L'authentification est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La méthode <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> n'est pas prise en charge dans Windows 95, Windows 98 ou Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
      <summary>Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur en utilisant le certificat spécifié sous forme d'opération asynchrone.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />Objet de tâche représentant l'opération asynchrone.</returns>
      <param name="serverCertificate">Certificat utilisé pour authentifier le serveur.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate" /> a la valeur null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">L'authentification a échoué et a rendu cet objet inutilisable.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification a déjà été effectuée.ouL'authentification du client à l'aide de ce <see cref="T:System.Net.Security.SslStream" /> a déjà été tentée.ou L'authentification est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.PlatformNotSupportedException">La méthode <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> n'est pas prise en charge dans Windows 95, Windows 98 ou Windows Millennium.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
      <summary>Appelé par les serveurs pour authentifier le serveur, et éventuellement le client, dans une connexion client-serveur en utilisant les certificats, la configuration requise et le protocole de sécurité spécifiés sous forme d'opération asynchrone.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />Objet de tâche représentant l'opération asynchrone.</returns>
      <param name="serverCertificate">Objet X509Certificate utilisé pour authentifier le serveur.</param>
      <param name="clientCertificateRequired">Valeur <see cref="T:System.Boolean" /> qui spécifie si le client doit fournir un certificat pour l'authentification.</param>
      <param name="enabledSslProtocols">Valeur <see cref="T:System.Security.Authentication.SslProtocols" /> qui représente le protocole utilisé pour l'authentification.</param>
      <param name="checkCertificateRevocation">Valeur <see cref="T:System.Boolean" /> qui spécifie si la liste de révocation de certificats est vérifiée pendant l'authentification.</param>
    </member>
    <member name="P:System.Net.Security.SslStream.CanRead">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en lecture.</summary>
      <returns>true si l'authentification s'est produite et que le flux sous-jacent est accessible en lecture ; sinon, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanSeek">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent peut faire l'objet d'une recherche.</summary>
      <returns>Cette propriété retourne toujours false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanTimeout">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent prend en charge les délais d'attente.</summary>
      <returns>true si le flux de données prend en charge les délais d'attente ; sinon, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CanWrite">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si le flux sous-jacent est accessible en écriture.</summary>
      <returns>true si l'authentification s'est produite et que le flux sous-jacent est accessible en écriture ; sinon, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CheckCertRevocationStatus">
      <summary>Obtient une valeur <see cref="T:System.Boolean" /> qui indique si la liste de révocation de certificats est vérifiée au cours du processus de validation des certificats.</summary>
      <returns>true si la liste de révocation de certificats est vérifiée ; sinon, false.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherAlgorithm">
      <summary>Obtient une valeur qui identifie l'algorithme de chiffrement en bloc utilisé par ce <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.CipherAlgorithmType" />.</returns>
      <exception cref="T:System.InvalidOperationException">L'accès à la propriété <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> a été effectué avant la fin du processus d'authentification ou le processus d'authentification a échoué.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.CipherStrength">
      <summary>Obtient une valeur qui identifie la puissance de l'algorithme de chiffrement utilisé par ce <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui spécifie la puissance de l'algorithme, en bits.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Flush">
      <summary>Provoque l'écriture des données mises en mémoire tampon sur le périphérique sous-jacent.</summary>
    </member>
    <member name="P:System.Net.Security.SslStream.HashAlgorithm">
      <summary>Obtient l'algorithme utilisé pour générer des codes d'authentification de messages (MAC).</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.HashAlgorithmType" />.</returns>
      <exception cref="T:System.InvalidOperationException">L'accès à la propriété <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> a été effectué avant la fin du processus d'authentification ou le processus d'authentification a échoué.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.HashStrength">
      <summary>Obtient une valeur qui identifie la puissance de l'algorithme de hachage utilisé par cette instance.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui spécifie la puissance de l'algorithme <see cref="T:System.Security.Authentication.HashAlgorithmType" />, en bits.Les valeurs autorisées sont 128 ou 160.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeAlgorithm">
      <summary>Obtient l'algorithme d'échange de clé utilisé par ce <see cref="T:System.Net.Security.SslStream" />.</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" />.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.KeyExchangeStrength">
      <summary>Obtient une valeur qui identifie la puissance de l'algorithme d'échange de clé utilisé par cette instance.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui spécifie la puissance de l'algorithme <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" />, en bits.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.Length">
      <summary>Obtient la longueur du flux sous-jacent.</summary>
      <returns>
        <see cref="T:System.Int64" />Longueur du flux sous-jacent.</returns>
      <exception cref="T:System.NotSupportedException">L'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.LocalCertificate">
      <summary>Obtient le certificat utilisé pour authentifier le point de terminaison local.</summary>
      <returns>Objet X509Certificate qui représente le certificat fourni pour l'authentification ou null si aucun certificat n'a été fourni.</returns>
      <exception cref="T:System.InvalidOperationException">L'authentification a échoué ou n'a pas été effectuée.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.Position">
      <summary>Obtient ou définit la position actuelle dans le flux sous-jacent.</summary>
      <returns>
        <see cref="T:System.Int64" />Position actuelle dans le flux sous-jacent.</returns>
      <exception cref="T:System.NotSupportedException">La définition de cette propriété n'est pas prise en charge.ouL'obtention de la valeur de cette propriété n'est pas prise en charge lorsque le flux sous-jacent est <see cref="T:System.Net.Sockets.NetworkStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Lit les données de ce flux et les stocke dans le tableau spécifié.</summary>
      <returns>Valeur <see cref="T:System.Int32" /> qui indique le nombre d'octets lus.Lorsqu'il n'y a plus de données à lire, retourne 0.</returns>
      <param name="buffer">Tableau <see cref="T:System.Byte" /> qui reçoit les octets lus dans ce flux.</param>
      <param name="offset">
        <see cref="T:System.Int32" /> contenant l'emplacement de base zéro dans <paramref name="buffer" />, à partir duquel commencer l'enregistrement des données lues dans ce flux.</param>
      <param name="count">
        <see cref="T:System.Int32" /> contenant le nombre maximal d'octets à lire dans ce flux.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; longueur de <paramref name="buffer" />.ou<paramref name="offset" /> + count &gt; longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">L'opération de lecture a échoué.Vérifiez l'exception interne, si elle permet de déterminer la cause de la défaillance.</exception>
      <exception cref="T:System.NotSupportedException">Une opération de lecture est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification n'a pas été effectuée.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.ReadTimeout">
      <summary>Obtient ou définit la durée pendant laquelle une opération de lecture reste bloquée en attendant des données.</summary>
      <returns>
        <see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération de lecture synchrone.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.RemoteCertificate">
      <summary>Obtient le certificat utilisé pour authentifier le point de terminaison distant.</summary>
      <returns>Objet X509Certificate qui représente le certificat fourni pour l'authentification ou null si aucun certificat n'a été fourni.</returns>
      <exception cref="T:System.InvalidOperationException">L'authentification a échoué ou n'a pas été effectuée.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Lève <see cref="T:System.NotSupportedException" />.</summary>
      <returns>Lève toujours <see cref="T:System.NotSupportedException" />.</returns>
      <param name="offset">Cette valeur est ignorée.</param>
      <param name="origin">Cette valeur est ignorée.</param>
      <exception cref="T:System.NotSupportedException">La recherche n'est pas prise en charge par les objets <see cref="T:System.Net.Security.SslStream" />.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.SetLength(System.Int64)">
      <summary>Définit la longueur du flux sous-jacent.</summary>
      <param name="value">Valeur <see cref="T:System.Int64" /> qui spécifie la longueur du flux.</param>
    </member>
    <member name="P:System.Net.Security.SslStream.SslProtocol">
      <summary>Obtient une valeur qui indique le protocole de sécurité utilisé pour authentifier cette connexion.</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.SslProtocols" /> qui représente le protocole utilisé pour l'authentification.</returns>
    </member>
    <member name="P:System.Net.Security.SslStream.TransportContext">
      <summary>Obtient le <see cref="T:System.Net.TransportContext" /> utilisé pour l'authentification à l'aide de la protection étendue.</summary>
      <returns>Objet <see cref="T:System.Net.TransportContext" /> qui contient le jeton de liaison de canal (FAO) utilisé comme protection étendue.</returns>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
      <summary>Écrit les données spécifiées dans ce flux.</summary>
      <param name="buffer">Tableau de <see cref="T:System.Byte" /> qui fournit les octets écrits dans le flux.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.IO.IOException">L'opération d'écriture a échoué.</exception>
      <exception cref="T:System.NotSupportedException">Une opération d'écriture est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification n'a pas été effectuée.</exception>
    </member>
    <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Écrivez le nombre spécifié de <see cref="T:System.Byte" />s dans le flux sous-jacent à l'aide de la mémoire tampon et de l'offset spécifiés.</summary>
      <param name="buffer">Tableau de <see cref="T:System.Byte" /> qui fournit les octets écrits dans le flux.</param>
      <param name="offset">
        <see cref="T:System.Int32" /> qui contient l'emplacement de base zéro dans<paramref name="buffer" /> auquel commencer la lecture des octets à écrire dans le flux.</param>
      <param name="count">
        <see cref="T:System.Int32" /> qui contient le nombre d'octets à lire dans <paramref name="buffer" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="offset" />
        <paramref name="&lt;" />
        <paramref name="0" />.<paramref name="-or-" /><paramref name="offset" /> &gt; longueur de <paramref name="buffer" />.ou<paramref name="offset" /> + count &gt; longueur de <paramref name="buffer" />.</exception>
      <exception cref="T:System.IO.IOException">L'opération d'écriture a échoué.</exception>
      <exception cref="T:System.NotSupportedException">Une opération d'écriture est déjà en cours.</exception>
      <exception cref="T:System.ObjectDisposedException">Cet objet a été fermé.</exception>
      <exception cref="T:System.InvalidOperationException">L'authentification n'a pas été effectuée.</exception>
    </member>
    <member name="P:System.Net.Security.SslStream.WriteTimeout">
      <summary>Obtient ou définit la durée pendant laquelle une opération d'écriture reste bloquée en attendant des données.</summary>
      <returns>
        <see cref="T:System.Int32" /> spécifiant le temps qui doit s'écouler avant l'échec d'une opération d'écriture synchrone. </returns>
    </member>
    <member name="T:System.Security.Authentication.AuthenticationException">
      <summary>Exception levée lorsque l'authentification échoue sur un flux de données d'authentification.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.AuthenticationException" /> sans message.</summary>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.AuthenticationException" /> avec le message spécifié.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'échec de l'authentification.</param>
    </member>
    <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.AuthenticationException" /> avec le message et l'exception interne spécifiés.</summary>
      <param name="message">
        <see cref="T:System.String" /> qui décrit l'échec de l'authentification.</param>
      <param name="innerException">
        <see cref="T:System.Exception" /> qui constitue la cause de l'exception actuelle.</param>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy">
      <summary>La classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> représente la stratégie de protection étendue utilisée par le serveur pour valider les connexions clientes entrantes. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie à quel moment la stratégie de protection étendue doit être appliquée.</summary>
      <param name="policyEnforcement">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> qui indique quand la stratégie de protection étendue doit être appliquée.</param>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie à quel moment la stratégie de protection étendue doit être appliquée, ainsi que le jeton de liaison de canal à utiliser.</summary>
      <param name="policyEnforcement">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> qui indique quand la stratégie de protection étendue doit être appliquée.</param>
      <param name="customChannelBinding">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui contient une liaison de canal personnalisée à utiliser pour la validation.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> est spécifié comme <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customChannelBinding " />est null. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie à quel moment la stratégie de protection étendue doit être appliquée, le type de protection appliqué par la stratégie et une liste des noms de fournisseurs de services personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</summary>
      <param name="policyEnforcement">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> qui indique quand la stratégie de protection étendue doit être appliquée.</param>
      <param name="protectionScenario">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> qui indique le genre de protection étendue appliquée par la stratégie.</param>
      <param name="customServiceNames">
        <see cref="T:System.Collections.ICollection" /> qui contient la liste de SPN personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> est spécifié comme <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />est nullou une liste vide. </exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ProtectionScenario,System.Security.Authentication.ExtendedProtection.ServiceNameCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> qui spécifie à quel moment la stratégie de protection étendue doit être appliquée, le type de protection appliqué par la stratégie et une liste des noms de fournisseurs de services personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</summary>
      <param name="policyEnforcement">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> qui indique quand la stratégie de protection étendue doit être appliquée.</param>
      <param name="protectionScenario">Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> qui indique le genre de protection étendue appliquée par la stratégie.</param>
      <param name="customServiceNames">
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient la liste de SPN personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="policyEnforcement" /> est spécifié comme <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="customServiceNames " />est nullou une liste vide. </exception>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding">
      <summary>Obtient un jeton de liaison de canal personnalisé à utiliser pour la validation.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> qui contient une liaison de canal personnalisée à utiliser pour la validation.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames">
      <summary>Obtient la liste des noms de fournisseurs de services (SPN) personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</summary>
      <returns>
        <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient la liste de SPN personnalisée utilisée pour assurer la correspondance avec le SPN d'un client.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.OSSupportsExtendedProtection">
      <summary>Indique si le système d'exploitation prend en charge l'authentification Windows intégrée avec protection étendue.</summary>
      <returns>true si le système d'exploitation prend en charge l'authentification Windows intégrée avec protection étendue ; sinon, false.</returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement">
      <summary>Obtient une valeur indiquant à quel moment la stratégie de protection doit être appliquée.</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> qui indique quand la stratégie de protection étendue doit être appliquée. </returns>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ProtectionScenario">
      <summary>Obtient le genre de protection assuré par la stratégie de protection étendue.</summary>
      <returns>Valeur <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> qui indique le genre de protection étendue appliquée par la stratégie. </returns>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.ToString">
      <summary>Obtient une représentation sous forme de chaîne de l'instance de stratégie de protection étendue.</summary>
      <returns>Instance de <see cref="T:System.String" /> qui contient la représentation de l'instance de <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />.</returns>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement">
      <summary>L'énumération <see cref="T:System.Security.Authentication.ExtendedProtection.PolicyEnforcement" /> spécifie à quel moment le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> doit être appliqué.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always">
      <summary>Le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> est toujours appliqué.Les clients qui ne prennent pas en charge la protection étendue ne pourront pas être authentifiés.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never">
      <summary>Le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> n'est jamais appliqué et la protection étendue est désactivée.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.WhenSupported">
      <summary>Le <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> est appliqué uniquement si le client et le serveur prennent en charge la protection étendue.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario">
      <summary>L'énumération <see cref="T:System.Security.Authentication.ExtendedProtection.ProtectionScenario" /> spécifie le scénario de protection appliqué par la stratégie.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TransportSelected">
      <summary>Le transport sélectionnera un scénario de protection sécurisé ou standard selon le type de canal utilisé.Pour la protection sécurisée, l'authentification Windows intégrée est incluse dans un wrapper dans un canal sécurisé et utilise un jeton de liaison de canal à correspondance parfaite sans validation du nom du fournisseur de service (SPN).Pour la protection standard, l'authentification Windows intégrée est éventuellement incluse dans un wrapper dans un canal sécurisé avec un jeton de liaison de canal facultatif et la validation SPN est obligatoire.Par conséquent, si la requête passe par un canal sécurisé, le jeton de liaison de canal est vérifié. Sinon, le SPN est vérifié.</summary>
    </member>
    <member name="F:System.Security.Authentication.ExtendedProtection.ProtectionScenario.TrustedProxy">
      <summary>L'authentification Windows intégrée est incluse dans un wrapper dans un canal sécurisé terminé par un proxy approuvé et utilise un jeton de liaison de canal avec une validation SPN obligatoire.Cette opération nécessite la présence d'un jeton de liaison de canal, mais ce jeton n'est pas vérifié pendant la vérification du SPN.</summary>
    </member>
    <member name="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection">
      <summary>La classe <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> est une collection en lecture seule des noms de principal du service. </summary>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
      <summary>Initialise une nouvelle instance en lecture seule de la classe <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> en fonction d'un <see cref="T:System.Collections.ICollection" /> existant. </summary>
      <param name="items">Instance de la classe <see cref="T:System.Collections.ICollection" /> qui contient les valeurs de noms du service spécifiées à utiliser pour initialiser la classe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item " />est null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> est vide.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
      <summary>Retourne une valeur qui indique si la chaîne spécifiée apparaît dans cette instance <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />.</summary>
      <returns>retourne <see cref="T:System.Boolean" /> ;true si le paramètre <paramref name="searchServiceName" /> se produit dans cette instance <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> ; sinon, false.</returns>
      <param name="searchServiceName">Chaîne à rechercher.</param>
    </member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Count"></member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.GetEnumerator"></member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
      <summary>Fusionne le <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> actuel avec les valeurs spécifiées pour créer un <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> contenant l'union.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient l'union de l'instance <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> existante fusionnée avec les valeurs spécifiées.</returns>
      <param name="serviceNames">Instance de la classe <see cref="T:System.Collections.IEnumerable" /> qui contient les valeurs de noms du service spécifiées à fusionner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />est null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> est vide.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
      <summary>Fusionne le <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> actuel avec les valeurs spécifiées pour créer un <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> contenant l'union.</summary>
      <returns>Nouvelle instance de <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> qui contient l'union de l'instance <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> existante fusionnée avec les valeurs spécifiées.</returns>
      <param name="serviceName">Chaîne qui contient les valeurs de noms du service spécifiées à utiliser pour initialiser la classe.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceNames " />est null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="serviceNames" /> est vide.</exception>
    </member>
    <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)"></member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.System#Collections#ICollection#SyncRoot"></member>
  </members>
</doc>